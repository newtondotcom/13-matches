Date de l'évaluation : ven. 17 mars 2023 14:30:54 CET

Nombre de similitudes : 4	(voir penalites1/sim_java.txt)
Les similitudes indiquent généralement du code à restructurer.

Erreurs checkstyle (différentes/types) : 0/0	(voir penalites1//checkstyle.txt)

Classe OperationInterditeException : OperationInterditeException (ok)

Procuration sur le jeu réel : allumettes/JeuProcuration.java (ok)

L'exception NumberFormatException devrait être traité dans la classe qui implante la stratégie Humain
  | allumettes/Joueur.java:102:                     } catch (NumberFormatException e) {

OperationInterditeException, levée dans : allumettes/JeuProcuration.java (ok)
OperationInterditeException, récupérée dans : allumettes/Arbitre.java (ok)

Throwable, Exception et RuntimeException ne devraient pas être récupérées car trop générales... ok

AssertionError ne doit pas être récupérée... ok

Autres exceptions récupérées :
  | allumettes/Arbitre.java:79:     } catch (CoupInvalideException e) {
  | allumettes/Joueur.java:75:                  } catch (CoupInvalideException e) {
  | allumettes/Joueur.java:92:                  try {game.retirer(1);} catch (CoupInvalideException e) {;}//impossible normalement;
  | allumettes/Joueur.java:102:                     } catch (NumberFormatException e) {
  | allumettes/Jouer.java:22:       } catch (ConfigurationException e) {

Utilisation de 'Scanner' : ok
  | allumettes/Arbitre.java:17: /** Scanner pour la lecture des entrées clavier. */
  | allumettes/Arbitre.java:18: public static final Scanner SCANNER = new Scanner(System.in);

Utilisation de 'split' : ok mais un seul split devrait suffir !  Code à restructurer...
  | allumettes/Jouer.java:43:       String[] arg1 = args[offset+0].split("@");
  | allumettes/Jouer.java:48:       String[] arg2 = args[offset+1].split("@");

Utilisation de 'Random' : ok
  | allumettes/Joueur.java:3:import java.util.Random;
  | allumettes/Joueur.java:57:              Random random = new Random();

Utilisation de '3' : Ne pas utiliser de constante littérale hors -1, 0 ou 1 (peut-être PRISE_MAX ?)
  |     allumettes/JeuAllu.java:7:  private int PRISE_MAX = 3;
  |     allumettes/JeuAllu.java:40:         throw  new CoupInvalideException(nbPrises,"Nombre invalide : "+ Integer.toString(nbPrises)+" (> 3)");

Affichage de 'Impossible !' : ok

Utilisation de 'System.exit' : ok

Compilation de Jouer.java : ERREUR, pas de allumettes/Jouer.class	(pénalité : 5)	(voir penalites1/Jouer.java.txt)
J'arrête les tests...

Total pénalités : 5
